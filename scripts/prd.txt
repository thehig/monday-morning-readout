<context>
# Overview
A single-page web application for displaying team progress during Monday morning video calls. The app emphasizes visual representation with minimal text, designed for clear visibility during screen sharing.

# Core Features
1. Visual Team Dashboard
   - Large, clear UI elements optimized for video calls
   - Interactive team member cards
   - Graphical gauges for key metrics
   - Week-by-week navigation

2. Team Member Cards
   - Expandable cards (click to maximize)
   - Progress bar (0-100%)
   - Velocity indicator (Red/Yellow/Green)
   - Team happiness gauge (1-5)
   - Customer happiness gauge (1-5)

# User Experience
Primary User: Team member presenting during video call
- Single screen dashboard view
- Simple password protection
- Week navigation with forward/back buttons
- Card maximization for detailed view
</context>
<PRD>
# Technical Architecture

System Components:
1. Single HTML File Delivery
   - Self-contained HTML, CSS, JavaScript
   - CDN-loaded dependencies
   - No build process required

2. Data Layer:
   - Supabase backend integration
   - Table: po_feedback
   - Encrypted connection details
   - Week-based data querying

Data Model (po_feedback table):
- submitted_by: email
- progress_percent: number (0-10)
- velocity_next_week: enum ("Rot", "Gelb", "Gr√ºn")
- team_happiness: number (1-5)
- customer_happiness: number (1-5)
- created_at: timestamp

# Development Roadmap

Phase 1 (MVP):
- Password-protected single HTML file
- Team member card grid layout
- Basic metrics visualization
- Week navigation

Phase 2:
- Card maximization interaction
- Improved gauge animations
- Enhanced visual styling
- Responsive layout improvements

# Logical Dependency Chain

Foundation:
1. HTML structure and styling
2. Supabase connection setup
3. Basic data fetching
4. Card grid layout

Quick Wins:
1. Week navigation
2. Gauge visualizations
3. Password protection
4. Responsive design

# Risks and Mitigations

Technical Challenges:
- Risk: Single file size management
  Mitigation: Optimize code, use CDN resources

- Risk: Screen sharing readability
  Mitigation: Large UI elements, high contrast colors

# Appendix

External Dependencies:
- Supabase JS Client
- Canvas Gauges
- Moment.js
- CryptoJS
- Font Awesome
- Google Fonts (Quicksand)
</PRD>
